name: Terraform Plan infra/EKS
on:
  pull_request:
    paths:
    - infra/EKS/**
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
  VALIDATE: "terraform\n${{ steps.terraform_validate.outputs.terraform_validate }}"
  PLAN: "terraform\n${{ steps.terraform_plan.outputs.terraform_plan }}"

jobs:  
  terraform-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      - id: terraform_fmt
        name: Run Terraform fmt on infra/EKS   
        run: terraform -chdir="infra/EKS" fmt
      
      - id: terraform_init
        name: Run Terraform init on infra/EKS
        run: terraform -chdir="infra/EKS" init

      - id: terraform_workspace
        name: Select Sandbox Workspace
        run: terraform -chdir="infra/EKS" workspace select sandbox
      
      - id: terraform_validate
        name: Run Terraform Validate on infra/EKS
        run: terraform -chdir="infra/EKS" validate -no-color

      - run: echo ${{ steps.terraform_validate.outputs.output }}

      - id: terraform_plan
        name: Run Terraform plan on infra/EKS
        run: terraform -chdir="infra/EKS" plan -no-color

      - run: echo ${{ steps.terraform_plan.outputs.output }}

      - id: comment_on_pr
        name: Comment Output onto Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v5
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
                const output = `#### Terraform Format and Style \`${{ steps.terraform_fmt.outcome }}\`
                #### Terraform Initialization \`${{ steps.terraform_init.outcome }}\`
                
                #### Terraform Validate \`${{ steps.terraform_validate.outcome }}\`
                
                <details><summary>Show Validate Output</summary>
                
                \`\`\`${process.env.VALIDATE}\`\`\`
                
                </details>

                #### Terraform Plan
                
                <details><summary>Show</summary>
                
                \`\`\`${process.env.PLAN}\`\`\`
                
                </details>

                *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: output
                })